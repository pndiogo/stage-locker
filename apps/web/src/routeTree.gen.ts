/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as GuestImport } from './routes/_guest'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as DemoTanstackQueryImport } from './routes/demo.tanstack-query'
import { Route as GuestVerifyEmailImport } from './routes/_guest/verify-email'
import { Route as GuestSignupImport } from './routes/_guest/signup'
import { Route as GuestLoginImport } from './routes/_guest/login'
import { Route as GuestForgotPasswordImport } from './routes/_guest/forgot-password'
import { Route as AuthenticatedProfileImport } from './routes/_authenticated/profile'
import { Route as AuthenticatedDashboardImport } from './routes/_authenticated/dashboard'

// Create/Update Routes

const GuestRoute = GuestImport.update({
  id: '/_guest',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DemoTanstackQueryRoute = DemoTanstackQueryImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRoute,
} as any)

const GuestVerifyEmailRoute = GuestVerifyEmailImport.update({
  id: '/verify-email',
  path: '/verify-email',
  getParentRoute: () => GuestRoute,
} as any)

const GuestSignupRoute = GuestSignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => GuestRoute,
} as any)

const GuestLoginRoute = GuestLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => GuestRoute,
} as any)

const GuestForgotPasswordRoute = GuestForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => GuestRoute,
} as any)

const AuthenticatedProfileRoute = AuthenticatedProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedDashboardRoute = AuthenticatedDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_guest': {
      id: '/_guest'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GuestImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/profile': {
      id: '/_authenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_guest/forgot-password': {
      id: '/_guest/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof GuestForgotPasswordImport
      parentRoute: typeof GuestImport
    }
    '/_guest/login': {
      id: '/_guest/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof GuestLoginImport
      parentRoute: typeof GuestImport
    }
    '/_guest/signup': {
      id: '/_guest/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof GuestSignupImport
      parentRoute: typeof GuestImport
    }
    '/_guest/verify-email': {
      id: '/_guest/verify-email'
      path: '/verify-email'
      fullPath: '/verify-email'
      preLoaderRoute: typeof GuestVerifyEmailImport
      parentRoute: typeof GuestImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
  AuthenticatedProfileRoute: typeof AuthenticatedProfileRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
  AuthenticatedProfileRoute: AuthenticatedProfileRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface GuestRouteChildren {
  GuestForgotPasswordRoute: typeof GuestForgotPasswordRoute
  GuestLoginRoute: typeof GuestLoginRoute
  GuestSignupRoute: typeof GuestSignupRoute
  GuestVerifyEmailRoute: typeof GuestVerifyEmailRoute
}

const GuestRouteChildren: GuestRouteChildren = {
  GuestForgotPasswordRoute: GuestForgotPasswordRoute,
  GuestLoginRoute: GuestLoginRoute,
  GuestSignupRoute: GuestSignupRoute,
  GuestVerifyEmailRoute: GuestVerifyEmailRoute,
}

const GuestRouteWithChildren = GuestRoute._addFileChildren(GuestRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof GuestRouteWithChildren
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/forgot-password': typeof GuestForgotPasswordRoute
  '/login': typeof GuestLoginRoute
  '/signup': typeof GuestSignupRoute
  '/verify-email': typeof GuestVerifyEmailRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof GuestRouteWithChildren
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/forgot-password': typeof GuestForgotPasswordRoute
  '/login': typeof GuestLoginRoute
  '/signup': typeof GuestSignupRoute
  '/verify-email': typeof GuestVerifyEmailRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_guest': typeof GuestRouteWithChildren
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/_authenticated/profile': typeof AuthenticatedProfileRoute
  '/_guest/forgot-password': typeof GuestForgotPasswordRoute
  '/_guest/login': typeof GuestLoginRoute
  '/_guest/signup': typeof GuestSignupRoute
  '/_guest/verify-email': typeof GuestVerifyEmailRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/dashboard'
    | '/profile'
    | '/forgot-password'
    | '/login'
    | '/signup'
    | '/verify-email'
    | '/demo/tanstack-query'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/dashboard'
    | '/profile'
    | '/forgot-password'
    | '/login'
    | '/signup'
    | '/verify-email'
    | '/demo/tanstack-query'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/_guest'
    | '/_authenticated/dashboard'
    | '/_authenticated/profile'
    | '/_guest/forgot-password'
    | '/_guest/login'
    | '/_guest/signup'
    | '/_guest/verify-email'
    | '/demo/tanstack-query'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  GuestRoute: typeof GuestRouteWithChildren
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  GuestRoute: GuestRouteWithChildren,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/_guest",
        "/demo/tanstack-query"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/dashboard",
        "/_authenticated/profile"
      ]
    },
    "/_guest": {
      "filePath": "_guest.tsx",
      "children": [
        "/_guest/forgot-password",
        "/_guest/login",
        "/_guest/signup",
        "/_guest/verify-email"
      ]
    },
    "/_authenticated/dashboard": {
      "filePath": "_authenticated/dashboard.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/profile": {
      "filePath": "_authenticated/profile.tsx",
      "parent": "/_authenticated"
    },
    "/_guest/forgot-password": {
      "filePath": "_guest/forgot-password.tsx",
      "parent": "/_guest"
    },
    "/_guest/login": {
      "filePath": "_guest/login.tsx",
      "parent": "/_guest"
    },
    "/_guest/signup": {
      "filePath": "_guest/signup.tsx",
      "parent": "/_guest"
    },
    "/_guest/verify-email": {
      "filePath": "_guest/verify-email.tsx",
      "parent": "/_guest"
    },
    "/demo/tanstack-query": {
      "filePath": "demo.tanstack-query.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
